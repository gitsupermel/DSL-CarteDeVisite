/*
 * generated by Xtext 2.30.0
 */
grammar InternalVcard;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.compil.dslvisitcard.dvc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.compil.dslvisitcard.dvc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.compil.dslvisitcard.dvc.services.VcardGrammarAccess;

}
@parser::members {
	private VcardGrammarAccess grammarAccess;

	public void setGrammarAccess(VcardGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getCardsAssignment()); }
		(rule__Model__CardsAssignment)*
		{ after(grammarAccess.getModelAccess().getCardsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCard
entryRuleCard
:
{ before(grammarAccess.getCardRule()); }
	 ruleCard
{ after(grammarAccess.getCardRule()); } 
	 EOF 
;

// Rule Card
ruleCard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardAccess().getGroup()); }
		(rule__Card__Group__0)
		{ after(grammarAccess.getCardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__0__Impl
	rule__Card__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getCardKeyword_0()); }
	'Card'
	{ after(grammarAccess.getCardAccess().getCardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__1__Impl
	rule__Card__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCardAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__2__Impl
	rule__Card__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getNameKeyword_2()); }
	'Name:'
	{ after(grammarAccess.getCardAccess().getNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__3__Impl
	rule__Card__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getNameAssignment_3()); }
	(rule__Card__NameAssignment_3)
	{ after(grammarAccess.getCardAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__4__Impl
	rule__Card__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getTitleKeyword_4()); }
	'Title:'
	{ after(grammarAccess.getCardAccess().getTitleKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__5__Impl
	rule__Card__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getTitleAssignment_5()); }
	(rule__Card__TitleAssignment_5)
	{ after(grammarAccess.getCardAccess().getTitleAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__6__Impl
	rule__Card__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getCompanyKeyword_6()); }
	'Company:'
	{ after(grammarAccess.getCardAccess().getCompanyKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__7__Impl
	rule__Card__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getCompanyAssignment_7()); }
	(rule__Card__CompanyAssignment_7)
	{ after(grammarAccess.getCardAccess().getCompanyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__8__Impl
	rule__Card__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getEmailKeyword_8()); }
	'Email:'
	{ after(grammarAccess.getCardAccess().getEmailKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__9__Impl
	rule__Card__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getEmailAssignment_9()); }
	(rule__Card__EmailAssignment_9)
	{ after(grammarAccess.getCardAccess().getEmailAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__10__Impl
	rule__Card__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getPhoneKeyword_10()); }
	'Phone:'
	{ after(grammarAccess.getCardAccess().getPhoneKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__11__Impl
	rule__Card__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getPhoneAssignment_11()); }
	(rule__Card__PhoneAssignment_11)
	{ after(grammarAccess.getCardAccess().getPhoneAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Card__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCardAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getCardAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CardsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCardsCardParserRuleCall_0()); }
		ruleCard
		{ after(grammarAccess.getModelAccess().getCardsCardParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCardAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__TitleAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getTitleSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getCardAccess().getTitleSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__CompanyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getCompanySTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getCardAccess().getCompanySTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__EmailAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getEmailSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getCardAccess().getEmailSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Card__PhoneAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardAccess().getPhoneSTRINGTerminalRuleCall_11_0()); }
		RULE_STRING
		{ after(grammarAccess.getCardAccess().getPhoneSTRINGTerminalRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
